// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// These are the main models for the app
// Saving all info and relations

model Fund {
  address                     String                    @id
  active                      Boolean                   @default(true)
  name                        String
  slug                        String                    @unique
  avatar                      String
  about                       String?
  registrationTxId            String?
  registrationStatus          RegistrationStatus        @default(STARTED)
  raisingAmount               Int                       // amount in satoshi
  raisingDeadline             DateTime                  // date in the future
  transactions                FundingTransaction[]
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
  admins                      FundAdmin[]
  totalSats                   Int                       @default(0)
  totalMembers                Int                       @default(0)
  twitterHandle               String?
  websiteUrl                  String?
  @@index([address], type: Hash)
  @@index([slug], type: Hash)
  @@index([registrationStatus], type: Hash)
  @@index([registrationTxId], type: Hash)
}

model FundAdmin {
  id                          Int                       @id @default(autoincrement())
  fund                        Fund                      @relation(fields: [fundId], references: [address])
  user                        User                      @relation(fields: [userId], references: [appPrivateKey])
  fundId                      String
  userId                      String
  @@index([fundId], type: Hash)
  @@index([userId], type: Hash)
}

model FundAdminInvite {
  id                          Int                       @id @default(autoincrement())
  fundAddress                 String
  userAddress                 String
  @@index([fundAddress], type: Hash)
  @@index([userAddress], type: Hash)
}

model User {
  appPrivateKey               String                    @id
  address                     String                    @unique
  email                       String?
  fundingWallet               FundingWallet?            @relation(fields: [fundingWalletAddress], references: [address])
  fundingWalletAddress        String?                   @unique
  registrationTxId            String?
  registrationStatus          RegistrationStatus        @default(STARTED)
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
  fundAdmins                  FundAdmin[]
  forwardConfirmation         ForwardConfirmation       @relation(fields: [forwardConfirmationId], references: [address])
  forwardConfirmationId       String                    @unique
  @@index([appPrivateKey], type: Hash)
  @@index([address], type: Hash)
  @@index([registrationStatus], type: Hash)
  @@index([registrationTxId], type: Hash)
}

model ForwardConfirmation {
  address                     String                    @id
  user                        User?
  fundAddress                 String?                
  fundTransaction             FundingTransaction?       @relation(fields: [fundTransactionId], references: [txId])
  fundTransactionId           String?                   @unique
  @@index([fundAddress], type: Hash)
  @@index([fundTransactionId], type: Hash)
}

model FundingWallet {
  address                     String                    @id
  index                       Int                       @unique
  transactions                FundingTransaction[]
  user                        User?
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
  @@index([address], type: Hash)
}

model FundingTransaction {
  txId                        String                    @id
  wallet                      FundingWallet             @relation(fields: [walletAddress], references: [address])
  walletAddress               String
  fund                        Fund                      @relation(fields: [fundAddress], references: [address])
  fundAddress                 String
  userAddress                 String
  sats                        Int
  registrationTxId            String?
  registrationStatus          RegistrationStatus        @default(STARTED)
  confirmation                ForwardConfirmation?
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
  @@index([txId], type: Hash)
  @@index([fundAddress], type: Hash)
  @@index([walletAddress], type: Hash)
  @@index([registrationStatus], type: Hash)
  @@index([registrationTxId], type: Hash)
}

// These are specific read models
// Used to speed up loading of certain info

model FundMember {
  id                          Int                       @id @default(autoincrement())
  fundAddress                 String                    
  userAddress                 String                    
  sats                        Int
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
  @@index([fundAddress], type: Hash)
  @@index([userAddress], type: Hash)
}

// Enums

enum RegistrationStatus {
  STARTED
  COMPLETED
  FAILED
}
