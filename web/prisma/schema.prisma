// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Dao {
  publicKey                   String                    @id
  name                        String
  slug                        String                    @unique
  about                       String?
  registrationTxId            String?
  registrationStatus          RegistrationStatus        @default(STARTED)
  raisingAmount               Int                       // amount in satoshi
  raisingDeadline             DateTime                  // date in the future
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
  admins                      DaoAdmin[]
}

model DaoAdmin {
  id                          Int                       @id @default(autoincrement())
  dao                         Dao                       @relation(fields: [daoId], references: [publicKey])
  user                        User                      @relation(fields: [userId], references: [appPrivateKey])
  daoId                       String
  userId                      String
}

model User {
  appPrivateKey               String                    @id
  address                     String
  fundingWallet               FundingWallet?            @relation(fields: [fundingWalletPublicKey], references: [publicKey])
  fundingWalletPublicKey      String?                   @unique
  registrationTxId            String?
  registrationStatus          RegistrationStatus        @default(STARTED)
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
  daoAdmins                   DaoAdmin[]
}

model FundingWallet {
  publicKey                   String                    @id
  address                     String
  privateKey                  String
  transactions                FundingTransaction[]
  user                        User?
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
}

model FundingTransaction {
  txId                        String                    @id
  wallet                      FundingWallet             @relation(fields: [walletPublicKey], references: [publicKey])
  walletPublicKey             String
  status                      String
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
}

enum RegistrationStatus {
  STARTED
  COMPLETED
  FAILED
}
